package com.williambl.prometheus.common.multiblock

import com.williambl.prometheus.objectholder.ModBlockHolder
import net.minecraft.block.Block
import net.minecraft.util.math.BlockPos

object ModMultiBlocks {

    val ancientDevice = MultiBlock(arrayOf(
            createBlockInfo(1, -1, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -1, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -1, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -1, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -1, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -1, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -1, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -1, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -1, -1, ModBlockHolder.ancientCircuitry),

            createBlockInfo(1, -2, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -2, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -2, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -2, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -2, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -2, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -2, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -2, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -2, -1, ModBlockHolder.ancientCircuitry),

            createBlockInfo(1, -3, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -3, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(1, -3, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -3, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -3, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(0, -3, -1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -3, 1, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -3, 0, ModBlockHolder.ancientCircuitry),
            createBlockInfo(-1, -3, -1, ModBlockHolder.ancientCircuitry),

            createBlockInfo(2, 0, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(2, 0, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, 0, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(2, 0, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, 0, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, 0, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, 0, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(1, 0, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(1, 0, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(1, 0, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, 0, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, 0, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(0, 0, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(0, 0, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, 0, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, 0, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, 0, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, 0, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, 0, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, 0, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, 0, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, 0, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, 0, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, 0, -2, ModBlockHolder.ancientCasing),

            createBlockInfo(2, -1, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -1, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -1, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -1, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -1, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -1, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -1, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -1, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -1, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -1, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -1, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -1, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -1, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -1, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -1, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -1, -2, ModBlockHolder.ancientCasing),

            createBlockInfo(2, -2, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -2, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -2, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -2, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -2, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -2, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -2, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -2, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -2, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -2, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -2, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -2, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -2, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -2, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -2, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -2, -2, ModBlockHolder.ancientCasing),

            createBlockInfo(2, -3, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -3, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -3, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -3, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -3, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -3, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -3, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -3, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -3, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -3, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -3, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -3, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -3, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -3, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -3, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -3, -2, ModBlockHolder.ancientCasing),

            createBlockInfo(2, -4, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -4, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -4, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -4, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(2, -4, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -4, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -4, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -4, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -4, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(1, -4, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -4, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -4, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -4, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -4, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(0, -4, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -4, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -4, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -4, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -4, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-1, -4, -2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -4, 2, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -4, 1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -4, 0, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -4, -1, ModBlockHolder.ancientCasing),
            createBlockInfo(-2, -4, -2, ModBlockHolder.ancientCasing)
    ))

    fun createBlockInfo(x: Int, y: Int, z: Int, block: Block): MultiBlock.MultiBlockBlockInfo {
        return MultiBlock.MultiBlockBlockInfo(BlockPos(x, y, z), block.defaultState)
    }
}